#! /bin/sh
#
# Written by Erik Troan (ewt@redhat.com) 1996
#            Jakub Jelinek (jj@sunsite.mff.cuni.cz) 1996,2004
#            Tomasz K³oczko (kloczek@rudy.mif.pg.gda.pl) 1997
# minor changes by Wojtek Pilorz (wpilorz@bdk.lublin.pl) 1997
# minor changes by Michele Marziani (marziani@fe.infn.it) 1997
# bug files by Marc Merlin (marcsoft@merlins.org) 1998
# locale bugfix by Michal Svec (rebel@penguin.cz) 2000
# Whitespace(s) & single quote(s) in filename workaround
#   by Andrew V. Samoilov <sav@bcs.zp.ua> 2004
# https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=64007
#
# (C) 1996-2004 The Free Software Foundation.
#

# override any locale for dates
unset LC_ALL
LC_TIME=C
export LC_TIME

if rpm --nosignature --version >/dev/null 2>&1; then
  RPM="rpm --nosignature"
else
  RPM="rpm"
fi
RPM2CPIO="rpm2cpio"
SED="sed"
# Surround the whole filename with single quotes and handle specially
# \', ' and \ at the end of the string.
SEDCMD="s/\\(\\\\\\?\\)'/'\\1\\1\\\\''/g;s/\\\\\$/'\\\\\\\\'/;s/^/'/;s/\$/'/"

mcrpmfs_list ()
{
    # set MCFASTRPM_DFLT to 1 for faster rpm files handling by default, to 0 for
    # slower handling
    MCFASTRPM_DFLT=0
    if test -z "$MCFASTRPM"; then
      MCFASTRPM=$MCFASTRPM_DFLT
    fi
    f="`echo "$1" | $SED "$SEDCMD"`"
    FILEPREF="-r--r--r--   1 root     root    "
    DESC=`$RPM -qip "$f" 2>/dev/null` || {
	echo "$FILEPREF 0 "`date +"%b %d %H:%M"`" ERROR"
	exit 1
    }
    DATE=`$RPM -qp --qf "%{BUILDTIME:date}\n" "$f" | cut -c 5-11,21-24`
    HEADERSIZE=`echo "$DESC" | wc -c`
    echo "-r--r--r--   1 root     root  $HEADERSIZE $DATE HEADER"
    echo "-r-xr-xr-x   1 root     root    39 $DATE INSTALL"
    echo "-r-xr-xr-x   1 root     root    39 $DATE UPGRADE"
    echo "dr-xr-xr-x   3 root     root	   0 $DATE INFO"
    echo "$FILEPREF 0 $DATE INFO/NAME-VERSION-RELEASE"
    echo "$FILEPREF 0 $DATE INFO/GROUP"
    echo "$FILEPREF 0 $DATE INFO/BUILDHOST"
    echo "$FILEPREF 0 $DATE INFO/SOURCERPM"
    if test "$MCFASTRPM" = 0 ; then
     test "`$RPM -qp --qf \"%{DISTRIBUTION}\" \"$f\"`" = "(none)" ||
 	 echo "$FILEPREF 0 $DATE INFO/DISTRIBUTION"
     test "`$RPM -qp --qf \"%{VENDOR}\" \"$f\"`" = "(none)" ||
	 echo "$FILEPREF 0 $DATE INFO/VENDOR"
     test "`$RPM -qp --qf \"%{DESCRIPTION}\" \"$f\"`" = "(none)" ||
         echo "$FILEPREF 0 $DATE INFO/DESCRIPTION"
     test "`$RPM -qp --qf \"%{SUMMARY}\" \"$f\"`" = "(none)" ||
         echo "$FILEPREF 0 $DATE INFO/SUMMARY"
     if test "`$RPM -qp --qf \"%{RPMTAG_PREIN}%{RPMTAG_POSTIN}%{RPMTAG_PREUN}%{RPMTAG_POSTUN}%{VERIFYSCRIPT}\" \"$f\"`" != "(none)(none)(none)(none)(none)"; then
	echo "dr-xr-xr-x   1 root     root     0 $DATE INFO/SCRIPTS"
	test "`$RPM -qp --qf \"%{RPMTAG_PREIN}\" \"$f\"`" = '(none)' ||
	   echo "$FILEPREF 0 $DATE INFO/SCRIPTS/PREIN"
	test "`$RPM -qp --qf \"%{RPMTAG_POSTIN}\" \"$f\"`" = '(none)' ||
	   echo "$FILEPREF 0 $DATE INFO/SCRIPTS/POSTIN"
	test "`$RPM -qp --qf \"%{RPMTAG_PREUN}\" \"$f\"`" = '(none)' ||
	   echo "$FILEPREF 0 $DATE INFO/SCRIPTS/PREUN"
	test "`$RPM -qp --qf \"%{RPMTAG_POSTUN}\" \"$f\"`" = '(none)' ||
	   echo "$FILEPREF 0 $DATE INFO/SCRIPTS/POSTUN"
	test "`$RPM -qp --qf \"%{VERIFYSCRIPT}\" \"$f\"`" = '(none)' ||
	   echo "$FILEPREF 0 $DATE INFO/SCRIPTS/VERIFYSCRIPT"
        echo "$FILEPREF 0 $DATE INFO/SCRIPTS/ALL"
     fi
    else
     echo "$FILEPREF 0 $DATE INFO/DISTRIBUTION"
     echo "$FILEPREF 0 $DATE INFO/VENDOR"
     echo "$FILEPREF 0 $DATE INFO/DESCRIPTION"
     echo "$FILEPREF 0 $DATE INFO/SUMMARY"
     echo "dr-xr-xr-x   1 root     root     0 $DATE INFO/SCRIPTS"
     echo "$FILEPREF 0 $DATE INFO/SCRIPTS/PREIN"
     echo "$FILEPREF 0 $DATE INFO/SCRIPTS/POSTIN"
     echo "$FILEPREF 0 $DATE INFO/SCRIPTS/PREUN"
     echo "$FILEPREF 0 $DATE INFO/SCRIPTS/POSTUN"
     echo "$FILEPREF 0 $DATE INFO/SCRIPTS/VERIFYSCRIPT"
     echo "$FILEPREF 0 $DATE INFO/SCRIPTS/ALL"
    fi
    if test "$MCFASTRPM" = 0 ; then
     test "`$RPM -qp --qf \"%{PACKAGER}\" \"$f\"`" = "(none)" ||
	 echo "$FILEPREF 0 $DATE INFO/PACKAGER"
     test "`$RPM -qp --qf \"%{URL}\" \"$f\"`" = "(none)" ||
	 echo "$FILEPREF 0 $DATE INFO/URL"
     test "`$RPM -qp --qf \"%{SERIAL}\" \"$f\"`" = "(none)" ||
	 echo "$FILEPREF 0 $DATE INFO/SERIAL"
     test "`$RPM -qp --qf \"%{COPYRIGHT}\" \"$f\"`" = "(none)" ||
	 echo "$FILEPREF 0 $DATE INFO/COPYRIGHT"
     test "`$RPM -qp --qf \"%{EPOCH}\" \"$f\"`" = "(none)" ||
	 echo "$FILEPREF 0 $DATE INFO/EPOCH"
     test "`$RPM -qp --qf \"%{LICENSE}\" \"$f\"`" = "(none)" ||
	 echo "$FILEPREF 0 $DATE INFO/LICENSE"
    else
	 echo "$FILEPREF 0 $DATE INFO/PACKAGER"
	 echo "$FILEPREF 0 $DATE INFO/URL"
	 echo "$FILEPREF 0 $DATE INFO/SERIAL"
	 echo "$FILEPREF 0 $DATE INFO/COPYRIGHT"
	 echo "$FILEPREF 0 $DATE INFO/EPOCH"
	 echo "$FILEPREF 0 $DATE INFO/LICENSE"
    fi
    echo "$FILEPREF 0 $DATE INFO/BUILDTIME"
    echo "$FILEPREF 0 $DATE INFO/RPMVERSION"
    echo "$FILEPREF 0 $DATE INFO/OS"
    echo "$FILEPREF 0 $DATE INFO/SIZE"
    if test "$MCFASTRPM" != 0 ; then
    $RPM -qp --qf "[%{REQUIRENAME}\n]" "$f" | grep "(none)" > /dev/null ||
	echo "$FILEPREF 0 $DATE INFO/REQUIRENAME"
    $RPM -qp --qf "[%{OBSOLETES}\n]" "$f" | grep "(none)" > /dev/null ||
	echo "$FILEPREF 0 $DATE INFO/OBSOLETES"
    $RPM -qp --qf "[%{PROVIDES}\n]" "$f" | grep "(none)" > /dev/null ||
	echo "$FILEPREF 0 $DATE INFO/PROVIDES"
    $RPM -qp --qf "[%{CONFLICTS}\n]" "$f" | grep "(none)" > /dev/null ||
	echo "$FILEPREF 0 $DATE INFO/CONFLICTS"
    test "`$RPM -qp --qf \"%{CHANGELOGTEXT}\" \"$f\"`" = "(none)" ||
       echo "$FILEPREF 0 $DATE INFO/CHANGELOG"
    else 
	echo "$FILEPREF 0 $DATE INFO/REQUIRENAME"
	echo "$FILEPREF 0 $DATE INFO/OBSOLETES"
	echo "$FILEPREF 0 $DATE INFO/PROVIDES"
	echo "$FILEPREF 0 $DATE INFO/CONFLICTS"
        echo "$FILEPREF 0 $DATE INFO/CHANGELOG"
    fi

    echo "$FILEPREF 0 $DATE CONTENTS.cpio"
}

mcrpmfs_copyout ()
{
    f="`echo "$1" | $SED "$SEDCMD"`"
    case "$2" in
	HEADER) $RPM -qip "$f" > "$3"; exit 0;;
	INSTALL) echo "# Run this to install this RPM package" > "$3"; exit 0;;
	UPGRADE) echo "# Run this to upgrade this RPM package" > "$3"; exit 0;;
	ERROR) $RPM -qip "$f" > /dev/null 2> "$3"; exit 0;;
	INFO/NAME-VERSION-RELEASE)	$RPM -qp --qf "%{NAME}-%{VERSION}-%{RELEASE}\n" "$f" > "$3"; exit 0;;
	INFO/RELEASE)		$RPM -qp --qf "%{RELEASE}\n" "$f" > "$3"; exit 0;;
	INFO/GROUP)		$RPM -qp --qf "%{GROUP}\n" "$f" > "$3"; exit 0;;
	INFO/DISTRIBUTION) 	$RPM -qp --qf "%{DISTRIBUTION}\n" "$f" > "$3"; exit 0;;
	INFO/VENDOR)		$RPM -qp --qf "%{VENDOR}\n" "$f" > "$3"; exit 0;;
	INFO/BUILDHOST)		$RPM -qp --qf "%{BUILDHOST}\n" "$f" > "$3"; exit 0;;
	INFO/SOURCERPM)		$RPM -qp --qf "%{SOURCERPM}\n" "$f" > "$3"; exit 0;;
	INFO/DESCRIPTION)	$RPM -qp --qf "%{DESCRIPTION}\n" "$f" > "$3"; exit 0;;
	INFO/PACKAGER)		$RPM -qp --qf "%{PACKAGER}\n" "$f" > "$3"; exit 0;;
	INFO/URL)		$RPM -qp --qf "%{URL}\n" "$f" >"$3"; exit 0;;
	INFO/BUILDTIME)		$RPM -qp --qf "%{BUILDTIME:date}\n" "$f" >"$3"; exit 0;;
	INFO/SERIAL)		$RPM -qp --qf "%{SERIAL}\n" "$f" >"$3"; exit 0;;
	INFO/COPYRIGHT)		$RPM -qp --qf "%{COPYRIGHT}\n" "$f" >"$3"; exit 0;;
	INFO/EPOCH)		$RPM -qp --qf "%{EPOCH}\n" "$f" >"$3"; exit 0;;
	INFO/LICENSE)		$RPM -qp --qf "%{LICENSE}\n" "$f" >"$3"; exit 0;;
	INFO/RPMVERSION)	$RPM -qp --qf "%{RPMVERSION}\n" "$f" >"$3"; exit 0;;
	INFO/REQUIRENAME)	$RPM -qp --qf "[%{REQUIRENAME} %{REQUIREFLAGS:depflags} %{REQUIREVERSION}\n]" "$f" >"$3"; exit 0;;
	INFO/PROVIDES)		$RPM -qp --qf "[%{PROVIDES}\n]" "$f" >"$3"; exit 0;;
	INFO/SCRIPTS/PREIN)	$RPM -qp --qf "%{RPMTAG_PREIN}\n" "$f" >"$3"; exit 0;;
	INFO/SCRIPTS/POSTIN)	$RPM -qp --qf "%{RPMTAG_POSTIN}\n" "$f" >"$3"; exit 0;;
	INFO/SCRIPTS/PREUN)	$RPM -qp --qf "%{RPMTAG_PREUN}\n" "$f" >"$3"; exit 0;;
	INFO/SCRIPTS/POSTUN)	$RPM -qp --qf "%{RPMTAG_POSTUN}\n" "$f" >"$3"; exit 0;;
	INFO/SCRIPTS/VERIFYSCRIPT)	$RPM -qp --qf "%{VERIFYSCRIPT}\n" "$f" >"$3"; exit 0;;
	INFO/SCRIPTS/ALL)		$RPM -qp --scripts "$f" > "$3"; exit 0;;
	INFO/SUMMARY)		$RPM -qp --qf "%{SUMMARY}\n" "$f" > "$3"; exit 0;;
	INFO/OS)		$RPM -qp --qf "%{OS}\n" "$f" > "$3"; exit 0;;
	INFO/CHANGELOG)		$RPM -qp --qf "[* %{CHANGELOGTIME:date} %{CHANGELOGNAME}\n%{CHANGELOGTEXT}\n\n]\n" "$f" > "$3"; exit 0;;
	INFO/SIZE)		$RPM -qp --qf "%{SIZE} bytes\n" "$f" > "$3"; exit 0;;
	INFO/OBSOLETES)		$RPM -qp --qf "[%{OBSOLETENAME} %|OBSOLETEFLAGS?{%{OBSOLETEFLAGS:depflags} %{OBSOLETEVERSION}}:{}|\n]" "$f" > "$3"; exit 0;;
	INFO/CONFLICTS)		$RPM -qp --qf "[%{CONFLICTNAME} %{CONFLICTFLAGS:depflags} %{CONFLICTVERSION}\n]" "$f" >"$3"; exit 0;;
	CONTENTS.cpio)		$RPM2CPIO "$1" > "$3"; exit 0;;
	*)
	    ;;
    esac
}

mcrpmfs_run ()
{
    f="`echo "$1" | $SED "$SEDCMD"`"
    case "$2" in
	INSTALL) echo "Installing \"\"$f\"\""; $RPM -ivh "$f"; exit 0;;
	UPGRADE) echo "Upgrading \"\"$f\"\""; $RPM -Uvh "$f"; exit 0;;
    esac
}

umask 077
case "$1" in
  list) mcrpmfs_list "$2"; exit 0;;
  copyout) mcrpmfs_copyout "$2" "$3" "$4"; exit 0;;
  run) mcrpmfs_run "$2" "$3"; exit 1;;
esac
exit 1
